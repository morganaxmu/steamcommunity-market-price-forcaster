library(readr)
data <- read_csv("data.csv", col_names = FALSE)
View(data)
?(read_csv)
?read_csv()
library(readr)
data <- read_csv("data.csv", col_names = FALSE,
col_types = cols(X1 = col_datetime(format = "%b %d %Y %H")))
View(data)
?ts()
?plot()
plot(data$X1,data$X2, type='b')
plot(data$X1,data$X2, type='l')
plot(data$X1,data$X2, type='l',xlab='time',ylab = 'price')
library(fGarch)
library(TSA)
library(rugarch)
library(forecast)
library(tseries)
summary(data)
?ts()
summary(data)
library(readr)
library(fGarch)
library(TSA)
library(rugarch)
library(forecast)
library(tseries)
data <- read_csv("data.csv", col_names = FALSE,
col_types = cols(X1 = col_datetime(format = "%b %d %Y %H")))
plot(data$X1,data$X2, type='l',xlab='time',ylab = 'price')
summary(data)
?ts()
pricedata <- ts(data$X2, frequency = 365, start = c(2014,12))
plot.ts(pricedata)
plot.ts(diff(pricedata))
acf(pricedata)
pacf(pricedata)
price.forecast = auto.arima(pricedata)
price.forecast
adf.test(diff(pricedata))
price.forecast.30 = forecast(pricedata, h=30)
plot(price.forecast.30)
lmresult = McLeod.Li.test(y=residuals(price.forecast))
plot(data$X1,data$X2, type='l',xlab='time',ylab = 'price')
price.myfit = ugarchfit(myspec, data=diff(pricedata))
acf(residuals(SZ50.myfit))
price.forecast2 = ugarchforecast(SZ50.myfit, n.ahead = 10, data = diff(pricedata[1:(length(pricedata)-10)]))
x1 = fitted(price.forecast2) + 1.96 *sigma(price.forecast2)
x2 = fitted(price.forecast2) - 1.96 *sigma(price.forecast2)
plot(x1 , type = "l", col = "blue", ylab = "diff",xlab = "lag")
title("forecast and actual transcation")
points(x2, type = "l", col = "blue")
points(fitted(price.forecast2), type = "o", col = "green")
points(c(1:10),diff(pricedata[(length(pricedata)-10):length(pricedata)]), type = "l", col ="red")
myspec = ugarchspec(variance.model = list(model='sGARCH',
garchOrder = c(1,1)),
mean.model = list(armaOrder = c(5,5),
include.mean = T),
distribution.model = 'std'
)
price.myfit = ugarchfit(myspec, data=diff(pricedata))
acf(residuals(SZ50.myfit))
price.forecast2 = ugarchforecast(SZ50.myfit, n.ahead = 10, data = diff(pricedata[1:(length(pricedata)-10)]))
x1 = fitted(price.forecast2) + 1.96 *sigma(price.forecast2)
x2 = fitted(price.forecast2) - 1.96 *sigma(price.forecast2)
plot(x1 , type = "l", col = "blue", ylab = "diff",xlab = "lag")
title("forecast and actual transcation")
points(x2, type = "l", col = "blue")
points(fitted(price.forecast2), type = "o", col = "green")
points(c(1:10),diff(pricedata[(length(pricedata)-10):length(pricedata)]), type = "l", col ="red")
library(readr)
library(fGarch)
library(TSA)
library(rugarch)
library(forecast)
library(tseries)
myspec = ugarchspec(variance.model = list(model='sGARCH',
garchOrder = c(1,1)),
mean.model = list(armaOrder = c(5,5),
include.mean = T),
distribution.model = 'std'
)
price.myfit = ugarchfit(myspec, data=diff(pricedata))
acf(residuals(SZ50.myfit))
price.forecast2 = ugarchforecast(SZ50.myfit, n.ahead = 10, data = diff(pricedata[1:(length(pricedata)-10)]))
x1 = fitted(price.forecast2) + 1.96 *sigma(price.forecast2)
x2 = fitted(price.forecast2) - 1.96 *sigma(price.forecast2)
plot(x1 , type = "l", col = "blue", ylab = "diff",xlab = "lag")
title("forecast and actual transcation")
points(x2, type = "l", col = "blue")
points(fitted(price.forecast2), type = "o", col = "green")
points(c(1:10),diff(pricedata[(length(pricedata)-10):length(pricedata)]), type = "l", col ="red")
myspec = ugarchspec(variance.model = list(model='sGARCH',
garchOrder = c(1,1)),
mean.model = list(armaOrder = c(5,5),
include.mean = T),
distribution.model = 'std'
)
price.myfit = ugarchfit(myspec, data=diff(pricedata))
acf(residuals(price.myfit))
price.forecast2 = ugarchforecast(price.myfit, n.ahead = 10, data = diff(pricedata[1:(length(pricedata)-10)]))
x1 = fitted(price.forecast2) + 1.96 *sigma(price.forecast2)
x2 = fitted(price.forecast2) - 1.96 *sigma(price.forecast2)
plot(x1 , type = "l", col = "blue", ylab = "diff",xlab = "lag")
title("forecast and actual transcation")
points(x2, type = "l", col = "blue")
points(fitted(price.forecast2), type = "o", col = "green")
points(c(1:10),diff(pricedata[(length(pricedata)-10):length(pricedata)]), type = "l", col ="red")
View(price.forecast2)
price.forecast2
sigma(price.forecast2)
plot(price.forecast2)
plot(price.forecast2)
price.forecast3 = ugarchforecast(price.myfit, data = diff(pricedata))
plot(price.forecast3)
plot(price.forecast2)
library(readr)
library(fGarch)
library(TSA)
library(rugarch)
library(forecast)
library(tseries)
data_all <- read_csv("data_all.csv", col_names = FALSE,
col_types = cols(X1 = col_datetime(format = "%b %d %Y %H")))
plot(price.forecast.30)
plot(price.forecast3) #输入1得到图形
plot(data_all$X1,data_all$X2, type='l',xlab='time',ylab = 'price')
plot(data_all$X1[1814:2533],data_all$X2[1814:2533], type='l',xlab='time',ylab = 'price')
plot(data_all$X1[1514:2533],data_all$X2[1514:2533], type='l',xlab='time',ylab = 'price')
plot(data_all$X1[1714:2533],data_all$X2[1714:2533], type='l',xlab='time',ylab = 'price')
plot(data_all$X1[1814:2533],data_all$X2[1814:2533], type='l',xlab='time',ylab = 'price')
plot(price.forecast.30)
plot(price.forecast3) #输入1得到图形
plot(data_all$X1[1814:2533],data_all$X2[1814:2533], type='l',xlab='time',ylab = 'price')
